name: Build and Deploy Nginx Image

on:
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Build Docker image
        run: |
          docker build -t my-nginx-image .
        
      - name: Tag Docker image
        run: |
          docker tag my-nginx-image:latest 265697931443.dkr.ecr.us-east-1.amazonaws.com/test/repo:${{ github.run_number }}
        
      - name: Push Docker image to Amazon ECR
        run: |
          docker push 265697931443.dkr.ecr.us-east-1.amazonaws.com/test/repo:${{ github.run_number }}

  # install_aws_cli:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #   - name: SSH to EC2 Instance and Install AWS CLI
  #     uses: appleboy/ssh-action@v1.1.0
  #     with:
  #       host: ${{ secrets.EC2_HOST }}
  #       username: ${{ secrets.EC2_USERNAME }}
  #       key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  #       script: |
  #         sudo apt-get update
  #         sudo apt-get install -y curl unzip

  #         # Install AWS CLI version 2
  #         curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  #         unzip awscliv2.zip
  #         sudo ./aws/install --update
  #         rm -rf awscliv2.zip

  configure_aws_cli:
    runs-on: ubuntu-latest
    # needs: install_aws_cli

    steps:
    - name: SSH to EC2 Instance and Configure AWS CLI
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        script: |
          echo "Configuring AWS CLI..."
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}

  deploy:
    runs-on: ubuntu-latest
    needs: configure_aws_cli

    steps:
    - name: SSH to EC2 Instance and Deploy Docker Container
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        script: |
          echo "Logging in to ECR..."
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 265697931443.dkr.ecr.us-east-1.amazonaws.com

          if [ $? -ne 0 ]; then
            echo "ECR login failed!"
            exit 1
          fi

          echo "Pulling Docker image..."
          docker pull 265697931443.dkr.ecr.us-east-1.amazonaws.com/test/repo:${{ github.run_number }}

          docker stop my-nginx-container || true
          docker rm my-nginx-container || true
          docker run -d -p 80:80 --name my-nginx-container 265697931443.dkr.ecr.us-east-1.amazonaws.com/test/repo:${{ github.run_number }}

